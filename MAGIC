{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1U2-WdBziDsnp-B5WeTLgfMYdO6FYysYl","authorship_tag":"ABX9TyNGIctpRz/OgzMAZTrYU91i"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"D48rTARmaSMj"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","from sklearn.preprocessing import StandardScaler\n","from imblearn.over_sampling import RandomOverSampler"]},{"cell_type":"code","source":["cols = [\"fLength\",\"fWidth\",\"fSize\",\"fConc\",\"fConcl\",\"fAsym\",\"fM3Long\",\"fM2Trans\",\"fAlpha\",\"fDist\",\"class\"]\n","df=pd.read_csv(\"/content/drive/MyDrive/Colab Notebooks/magic04.data\",names=cols)\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"5W-4RSEraANP","executionInfo":{"status":"ok","timestamp":1681657334432,"user_tz":-330,"elapsed":518,"user":{"displayName":"Jaya Krishna","userId":"07297308533842299552"}},"outputId":"238d68db-2c98-47bd-ae2b-b753e809f727"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    fLength    fWidth   fSize   fConc  fConcl     fAsym  fM3Long  fM2Trans  \\\n","0   28.7967   16.0021  2.6449  0.3918  0.1982   27.7004  22.0110   -8.2027   \n","1   31.6036   11.7235  2.5185  0.5303  0.3773   26.2722  23.8238   -9.9574   \n","2  162.0520  136.0310  4.0612  0.0374  0.0187  116.7410 -64.8580  -45.2160   \n","3   23.8172    9.5728  2.3385  0.6147  0.3922   27.2107  -6.4633   -7.1513   \n","4   75.1362   30.9205  3.1611  0.3168  0.1832   -5.5277  28.5525   21.8393   \n","\n","    fAlpha     fDist class  \n","0  40.0920   81.8828     g  \n","1   6.3609  205.2610     g  \n","2  76.9600  256.7880     g  \n","3  10.4490  116.7370     g  \n","4   4.6480  356.4620     g  "],"text/html":["\n","  <div id=\"df-ed9aea60-1f2b-4963-acf0-178151e5fee3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>fLength</th>\n","      <th>fWidth</th>\n","      <th>fSize</th>\n","      <th>fConc</th>\n","      <th>fConcl</th>\n","      <th>fAsym</th>\n","      <th>fM3Long</th>\n","      <th>fM2Trans</th>\n","      <th>fAlpha</th>\n","      <th>fDist</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>28.7967</td>\n","      <td>16.0021</td>\n","      <td>2.6449</td>\n","      <td>0.3918</td>\n","      <td>0.1982</td>\n","      <td>27.7004</td>\n","      <td>22.0110</td>\n","      <td>-8.2027</td>\n","      <td>40.0920</td>\n","      <td>81.8828</td>\n","      <td>g</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>31.6036</td>\n","      <td>11.7235</td>\n","      <td>2.5185</td>\n","      <td>0.5303</td>\n","      <td>0.3773</td>\n","      <td>26.2722</td>\n","      <td>23.8238</td>\n","      <td>-9.9574</td>\n","      <td>6.3609</td>\n","      <td>205.2610</td>\n","      <td>g</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>162.0520</td>\n","      <td>136.0310</td>\n","      <td>4.0612</td>\n","      <td>0.0374</td>\n","      <td>0.0187</td>\n","      <td>116.7410</td>\n","      <td>-64.8580</td>\n","      <td>-45.2160</td>\n","      <td>76.9600</td>\n","      <td>256.7880</td>\n","      <td>g</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>23.8172</td>\n","      <td>9.5728</td>\n","      <td>2.3385</td>\n","      <td>0.6147</td>\n","      <td>0.3922</td>\n","      <td>27.2107</td>\n","      <td>-6.4633</td>\n","      <td>-7.1513</td>\n","      <td>10.4490</td>\n","      <td>116.7370</td>\n","      <td>g</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>75.1362</td>\n","      <td>30.9205</td>\n","      <td>3.1611</td>\n","      <td>0.3168</td>\n","      <td>0.1832</td>\n","      <td>-5.5277</td>\n","      <td>28.5525</td>\n","      <td>21.8393</td>\n","      <td>4.6480</td>\n","      <td>356.4620</td>\n","      <td>g</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ed9aea60-1f2b-4963-acf0-178151e5fee3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ed9aea60-1f2b-4963-acf0-178151e5fee3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ed9aea60-1f2b-4963-acf0-178151e5fee3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["df[\"class\"] = (df[\"class\"]==\"g\").astype(int)"],"metadata":{"id":"mSaD2OLNbAib"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"DLDDiJ74bzIt","executionInfo":{"status":"ok","timestamp":1681657338493,"user_tz":-330,"elapsed":12,"user":{"displayName":"Jaya Krishna","userId":"07297308533842299552"}},"outputId":"5996da5a-f220-4adb-939a-86d1c805b976"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    fLength    fWidth   fSize   fConc  fConcl     fAsym  fM3Long  fM2Trans  \\\n","0   28.7967   16.0021  2.6449  0.3918  0.1982   27.7004  22.0110   -8.2027   \n","1   31.6036   11.7235  2.5185  0.5303  0.3773   26.2722  23.8238   -9.9574   \n","2  162.0520  136.0310  4.0612  0.0374  0.0187  116.7410 -64.8580  -45.2160   \n","3   23.8172    9.5728  2.3385  0.6147  0.3922   27.2107  -6.4633   -7.1513   \n","4   75.1362   30.9205  3.1611  0.3168  0.1832   -5.5277  28.5525   21.8393   \n","\n","    fAlpha     fDist  class  \n","0  40.0920   81.8828      1  \n","1   6.3609  205.2610      1  \n","2  76.9600  256.7880      1  \n","3  10.4490  116.7370      1  \n","4   4.6480  356.4620      1  "],"text/html":["\n","  <div id=\"df-b46d2b01-4964-482e-a1c7-43cf95adbcba\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>fLength</th>\n","      <th>fWidth</th>\n","      <th>fSize</th>\n","      <th>fConc</th>\n","      <th>fConcl</th>\n","      <th>fAsym</th>\n","      <th>fM3Long</th>\n","      <th>fM2Trans</th>\n","      <th>fAlpha</th>\n","      <th>fDist</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>28.7967</td>\n","      <td>16.0021</td>\n","      <td>2.6449</td>\n","      <td>0.3918</td>\n","      <td>0.1982</td>\n","      <td>27.7004</td>\n","      <td>22.0110</td>\n","      <td>-8.2027</td>\n","      <td>40.0920</td>\n","      <td>81.8828</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>31.6036</td>\n","      <td>11.7235</td>\n","      <td>2.5185</td>\n","      <td>0.5303</td>\n","      <td>0.3773</td>\n","      <td>26.2722</td>\n","      <td>23.8238</td>\n","      <td>-9.9574</td>\n","      <td>6.3609</td>\n","      <td>205.2610</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>162.0520</td>\n","      <td>136.0310</td>\n","      <td>4.0612</td>\n","      <td>0.0374</td>\n","      <td>0.0187</td>\n","      <td>116.7410</td>\n","      <td>-64.8580</td>\n","      <td>-45.2160</td>\n","      <td>76.9600</td>\n","      <td>256.7880</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>23.8172</td>\n","      <td>9.5728</td>\n","      <td>2.3385</td>\n","      <td>0.6147</td>\n","      <td>0.3922</td>\n","      <td>27.2107</td>\n","      <td>-6.4633</td>\n","      <td>-7.1513</td>\n","      <td>10.4490</td>\n","      <td>116.7370</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>75.1362</td>\n","      <td>30.9205</td>\n","      <td>3.1611</td>\n","      <td>0.3168</td>\n","      <td>0.1832</td>\n","      <td>-5.5277</td>\n","      <td>28.5525</td>\n","      <td>21.8393</td>\n","      <td>4.6480</td>\n","      <td>356.4620</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b46d2b01-4964-482e-a1c7-43cf95adbcba')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b46d2b01-4964-482e-a1c7-43cf95adbcba button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b46d2b01-4964-482e-a1c7-43cf95adbcba');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["for label in cols[:-1]:\n","  plt.hist(df[df[\"class\"]==1][label],color='blue',label='gamma',alpha=0.7,density=True)\n","  plt.hist(df[df[\"class\"]==0][label],color='red',label='hadron',alpha=0.7,density=True)\n","  plt.title(label)\n","  plt.ylabel(\"Probability\")\n","  plt.xlabel(label)\n","  plt.legend()\n","  plt.show()"],"metadata":{"id":"AnnJdAnRb59u"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train, valid, test = np.split(df.sample(frac=1), [int(0.6*len(df)), int(0.8*len(df))])"],"metadata":{"id":"7rGNEMbRdQuu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def scale_dataset(dataframe, oversample=False):\n","  X = dataframe[dataframe.columns[:-1]].values\n","  y = dataframe[dataframe.columns[-1]].values\n","\n","  scaler = StandardScaler()\n","  X = scaler.fit_transform(X)\n","\n","  if oversample:\n","    ros = RandomOverSampler()\n","    X, y = ros.fit_resample(X, y)\n","\n","  data = np.hstack((X, np.reshape(y, (-1, 1))))\n","\n","  return data, X, y"],"metadata":{"id":"wXIV5mdQd4PX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train, X_train, y_train = scale_dataset(train, oversample=True)\n","valid, X_valid, y_valid = scale_dataset(valid, oversample=False)\n","test, X_test, y_test = scale_dataset(test, oversample=False)"],"metadata":{"id":"2JD_wnQcfSV4"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#Neural Net"],"metadata":{"id":"6A08L8gT0fI2"}},{"cell_type":"code","source":["import tensorflow as tf"],"metadata":{"id":"4e6bNJ1wua0f"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def plot_history(history):\n","  fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(10, 4))\n","  ax1.plot(history.history['loss'], label='loss')\n","  ax1.plot(history.history['val_loss'], label='val_loss')\n","  ax1.set_xlabel('Epoch')\n","  ax1.set_ylabel('Binary crossentropy')  \n","  ax1.grid(True)\n","\n","  ax2.plot(history.history['accuracy'], label='accuracy')\n","  ax2.plot(history.history['val_accuracy'], label='val_accuracy')\n","  ax2.set_xlabel('Epoch')\n","  ax2.set_ylabel('Accuracy')\n","  ax2.grid(True)\n","\n","  plt.show()"],"metadata":{"id":"yUyf4QZU1kxV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def train_model(X_train, y_train, num_nodes, dropout_prob, lr, batch_size, epochs):\n","  nn_model = tf.keras.Sequential([      \n","      tf.keras.layers.LSTM(num_nodes,activation='tanh',input_shape=(10,)),\n","      tf.keras.layers.Dense(num_nodes,activation='tanh'),\n","      tf.keras.layers.Dense(units=1, activation='softmax'),     \n","  ])\n","\n","  nn_model.compile(optimizer=tf.keras.optimizers.Adam(lr), loss='binary_crossentropy', metrics=['accuracy'])\n","  history = nn_model.fit(\n","    X_train, y_train, epochs=epochs, batch_size=batch_size, validation_split=0.2, verbose=0\n","  )\n","\n","  return nn_model, history"],"metadata":{"id":"ZV6292ir0s5a"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["least_val_loss = float('inf')\n","least_loss_model = None\n","epochs=100\n","for num_nodes in [16, 32, 64]:\n","  for dropout_prob in [0, 0.2]:\n","    for lr in [0.01, 0.004, 0.001]:\n","      for batch_size in [32, 64, 128]:\n","        print(f\"{num_nodes} nodes, dropout {dropout_prob}, lr {lr}, batch size {batch_size}\")\n","        model, history = train_model(X_train, y_train, num_nodes, dropout_prob, lr, batch_size, epochs)\n","        plot_history(history)\n","        val_loss = model.evaluate(X_valid, y_valid)[0]\n","        if val_loss < least_val_loss:\n","          least_val_loss = val_loss\n","          least_loss_model = model"],"metadata":{"id":"uxDvrihG6P4n"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y_pred = least_loss_model.predict(X_test)\n","y_pred = (y_pred > 0.5).astype(int).reshape(-1,)"],"metadata":{"id":"AEf7fdkPB2Kf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672458376259,"user_tz":-330,"elapsed":458,"user":{"displayName":"Jaya Krishna","userId":"07297308533842299552"}},"outputId":"adc1e2a5-769d-4c5b-e0e4-945739499322"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["119/119 [==============================] - 0s 961us/step\n"]}]},{"cell_type":"code","source":["print(classification_report(y_test, y_pred))"],"metadata":{"id":"ouwbYtwY9QU1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672458381615,"user_tz":-330,"elapsed":648,"user":{"displayName":"Jaya Krishna","userId":"07297308533842299552"}},"outputId":"3b11c36b-4494-4257-fb84-4cbef753009d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.86      0.77      0.81      1333\n","           1       0.88      0.93      0.91      2471\n","\n","    accuracy                           0.88      3804\n","   macro avg       0.87      0.85      0.86      3804\n","weighted avg       0.87      0.88      0.87      3804\n","\n"]}]},{"cell_type":"markdown","source":["# kNN"],"metadata":{"id":"jMWeuFDBjIeo"}},{"cell_type":"code","source":["from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.metrics import classification_report"],"metadata":{"id":"lcgOiUfyhG8R"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["knn_model = KNeighborsClassifier(n_neighbors=5)\n","knn_model.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hwpcDQTEjTC4","executionInfo":{"status":"ok","timestamp":1672453464459,"user_tz":-330,"elapsed":3,"user":{"displayName":"Jaya Krishna","userId":"07297308533842299552"}},"outputId":"c12b884d-e290-46af-bf13-f3cfc8312477"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["KNeighborsClassifier()"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["y_pred = knn_model.predict(X_test)"],"metadata":{"id":"3udaHEZdjh8D"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(classification_report(y_test,y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z2xvF4NrjsEq","executionInfo":{"status":"ok","timestamp":1672453473513,"user_tz":-330,"elapsed":12,"user":{"displayName":"Jaya Krishna","userId":"07297308533842299552"}},"outputId":"09768683-aab8-42d5-846c-c1752f857b08"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.73      0.74      0.74      1333\n","           1       0.86      0.86      0.86      2471\n","\n","    accuracy                           0.81      3804\n","   macro avg       0.80      0.80      0.80      3804\n","weighted avg       0.81      0.81      0.81      3804\n","\n"]}]},{"cell_type":"markdown","source":["#Naive Bayes"],"metadata":{"id":"HKENCWLto-qW"}},{"cell_type":"code","source":["from sklearn.naive_bayes import GaussianNB"],"metadata":{"id":"GGqlN2AqkMgz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["nb_model = GaussianNB()\n","nb_model = nb_model.fit(X_train, y_train)"],"metadata":{"id":"b5FapoxUpLAi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y_pred = nb_model.predict(X_test)\n","print(classification_report(y_test,y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"D9P8ieatpY1n","executionInfo":{"status":"ok","timestamp":1672453487343,"user_tz":-330,"elapsed":3,"user":{"displayName":"Jaya Krishna","userId":"07297308533842299552"}},"outputId":"4014e683-9b56-438d-db0d-2c3a120765f1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.67      0.40      0.50      1333\n","           1       0.73      0.89      0.81      2471\n","\n","    accuracy                           0.72      3804\n","   macro avg       0.70      0.65      0.65      3804\n","weighted avg       0.71      0.72      0.70      3804\n","\n"]}]},{"cell_type":"markdown","source":["#Log Regression"],"metadata":{"id":"d7-JDS3qr2nJ"}},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression"],"metadata":{"id":"1zD1Yg6ur5lL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["lg_model = LogisticRegression()\n","lg_model = lg_model.fit(X_train, y_train)"],"metadata":{"id":"g-Nsrd6vsBKS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y_pred = lg_model.predict(X_test)\n","print(classification_report(y_test,y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Agp3uTD-sRMs","executionInfo":{"status":"ok","timestamp":1672453500764,"user_tz":-330,"elapsed":3,"user":{"displayName":"Jaya Krishna","userId":"07297308533842299552"}},"outputId":"bbc5b892-281c-45b5-a760-d7988ded5724"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.68      0.72      0.70      1333\n","           1       0.85      0.82      0.83      2471\n","\n","    accuracy                           0.78      3804\n","   macro avg       0.76      0.77      0.77      3804\n","weighted avg       0.79      0.78      0.78      3804\n","\n"]}]},{"cell_type":"markdown","source":["#SVM"],"metadata":{"id":"nKkbbdyht0Oh"}},{"cell_type":"code","source":["from sklearn.svm import SVC"],"metadata":{"id":"AMBsvx3ct1yR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["svm_model = SVC()\n","svm_model = svm_model.fit(X_train, y_train)"],"metadata":{"id":"65HQLCy1t6rq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y_pred = svm_model.predict(X_test)\n","print(classification_report(y_test,y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aF8YZ52FuOK1","executionInfo":{"status":"ok","timestamp":1672453521976,"user_tz":-330,"elapsed":1889,"user":{"displayName":"Jaya Krishna","userId":"07297308533842299552"}},"outputId":"5b46af47-b75a-4128-e12f-165d29178c9b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.80      0.80      0.80      1333\n","           1       0.89      0.89      0.89      2471\n","\n","    accuracy                           0.86      3804\n","   macro avg       0.85      0.85      0.85      3804\n","weighted avg       0.86      0.86      0.86      3804\n","\n"]}]}]}